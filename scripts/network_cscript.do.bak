// CERTIFICATION SCRIPT FOR NETWORK.ADO
// REQUIRES: MVMETA, METAREG
* 11jul2014: fails with long names

cscript network
set trace off
set more off
pause on
prog drop _all
adopath + H:\meta\network\ado\network_v1.1

// check network setup

use h:\meta\network\ado\smoking, clear
keep study treat d n

network setup d n, studyvar(stud) trtvar(treat) augment(0.0001) format(aug) ref(B)
l if study<=3

// check network convert
network convert pairs
l if study<=3

network convert stan
l if study<=3
save z, replace

network convert aug
l if study<=3

network convert pairs
l if study<=3

network convert stan
l if study<=3

network convert aug
l if study<=3

network convert pairs
l if study<=3

network convert stan
l if study<=3

cf _all using z, verbose



// check network meta: aug & std, multi-arm trials
use h:\meta\network\ado\smoking, clear
keep study treat d n
network setup d n, studyvar(stud) trtvar(treat) format(aug) ref(B)
network table

network meta c, print(bscov)
local tau = [tau]_b[_cons]

network convert st
network meta c, print(bscov)
local reldiff = 100*([tau]_b[_cons]/`tau'-1)
di "reldiff = " `reldiff' "% (" [tau]_b[_cons] " vs. " `tau' ")"
if abs(`reldiff')>0.01 exit 99


network convert aug
network meta c, print(bscov)
local reldiff = 100*([tau]_b[_cons]/`tau'-1)
di "reldiff = " `reldiff' "% (" [tau]_b[_cons] " vs. " `tau' ")"
if abs(`reldiff')>0.01 exit 99


network meta i, print(bscov)
local tau = [tau]_b[_cons]

network convert st
network meta i, print(bscov)
local reldiff = 100*([tau]_b[_cons]/`tau'-1)
di "reldiff = " `reldiff' "% (" [tau]_b[_cons] " vs. " `tau' ")"
if abs(`reldiff')>0.01 exit 99
	// tau = 0.55296504


network convert aug
network meta i, print(bscov)
local reldiff = 100*([tau]_b[_cons]/`tau'-1)
di "reldiff = " `reldiff' "% (" [tau]_b[_cons] " vs. " `tau' ")"
if abs(`reldiff')>0.01 exit 99


* change reference treatment
use h:\meta\network\ado\smoking, clear
keep study treat d n
network setup d n, studyvar(stud) trtvar(treat) format(aug) ref(C)
network meta i, print(bscov)
local reldiff = 100*([tau]_b[_cons]/`tau'-1)
di "reldiff = " `reldiff' "% (" [tau]_b[_cons] " vs. " `tau' ")"
if abs(`reldiff')>0.01 exit 99


// check network meta: aug, std & pairs, only two-arm trials
use "H:\meta\network\georgia\coronary artery disease pairwise.dta", clear
network import, tr(t1 t2) eff(logOR) study(study) stderr(se) 

network meta c, z

network conv st
network meta c, nounc print(bscov)

network conv aug
network meta c, nounc print(bscov)

network conv pairs
network meta i, z

network conv st
network meta i, nounc print(bscov)

network conv aug
network meta i, nounc print(bscov)



// forest plot

use "H:\meta\network\georgia\coronary artery disease pairwise.dta", clear
network import, tr(t1 t2) eff(logOR) study(study) stderr(se) 
network conv aug
network meta c, 
network meta i, 
network forest, msize(*0.2)


// Invented data to test network setup for quantitative data

clear
input study str1 trt sbp sbpsd count
1 A 50 10 100
1 B 60 10 100
1 C 62 10 100
2 A 70 10 100
2 B 75 10 100
3 A 60 10  25
3 C 55 10  25
end
l
network setup sbp sbpsd count, stud(study) trt(trt) smd
list study _y* _S*, noo sepby(_design)
network table
network query
network meta c

// Check everything works for all formats and refcats

foreach format in augment standard pairs {
	foreach ref in A B C D {
		di as input "Loop 1: format `format', ref `ref'"
		use h:\meta\network\ado\smoking, clear
		keep study treat d n
		network setup d n, studyvar(stud) trtvar(treat) format(`format') ref(`ref')
		network table
		network pattern
		network meta c, i2
		network meta i
		network query
		network forest, name(forest_`format', replace)
		if "`format'"=="augment" network sidesplit B C
		network unset
	}
}


// Check it also handles long study and treatment names
foreach format in augment standard pairs {
	di as input "Loop 2: format `format'"
	use h:\meta\network\ado\smoking, clear
	qui replace treat="NoContact" if treat=="A" 
	qui replace treat="SelfHelp" if treat=="B"
	qui replace treat="IndivCo" if treat=="C"
	qui replace treat="GroupCo" if treat=="D"
	gen stud="Study " + string(study)
	keep stud treat d n
	network setup d n, studyvar(stud) trtvar(treat) format(`format') 
	network table
	network pattern
	network map, name(map`format'`ref', replace)
	network meta c, i2
	network meta i
	network que
	network forest, debug name(forest_`format', replace)
}


// More forest plots - formats should agree
* Load and analyse the smoking data
foreach format in pairs aug st {
	di as input "Loop 3: format `format'"
	use h:\meta\network\ado\smoking, clear
	keep study treat d n
	network setup d n, studyvar(stud) trtvar(treat) format(`format')
	local opts ms(S) xsize(9.8) ysize(7.3) columns(xtile) ///
		xline(0,lcol(gray)) contrastpos(2)
	network forest, title(Smoking network) `opts' ///
		name(smoke_forest1_`format', replace) 	
	network meta c
	network meta i
	network forest, title(Smoking network) `opts' ///
		name(smoke_forest2_`format', replace) 
}

* Load and analyse the thrombolytics data (metareg fails for pairs format - why?)
foreach format in aug st {
	di as input "Loop 4: format `format'"
	use h:\meta\network\ado\thromb, clear
	keep study treat r n
	network setup r n, studyvar(stud) trtvar(treat) format(`format')
	local opts ms(Sh) xsize(9.8) ysize(7.3) columns(xtile) ///
		xline(0,lcol(gray)) contrastpos(-1.5) ncolumns(3)
	network forest, title(Thrombolytics network) `opts' ///
		name(thromb_forest1_`format', replace) 
	network meta c
	network meta i
	network forest, title(Thrombolytics network) `opts' ///
		name(thromb_forest2_`format', replace) 
}

* Check if and in
use h:\meta\network\ado\thromb, clear
keep study treat r n
network setup r n, studyvar(stud) trtvar(treat) 
network meta i if study>10
local test1 = r(chi2)
keep if study>10
network meta i
local test2 = r(chi2)
assert abs(`test2'/`test1'-1) < 1E-10 
